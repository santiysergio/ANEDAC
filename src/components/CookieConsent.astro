---
// src/components/CookieConsent.astro
// No se necesita código de servidor (frontmatter) para este componente.
---

<!-- 1. ESTRUCTURA HTML DEL BANNER -->
<div id='cookie-consent-banner' class='cookie-consent-banner'>
	<p>
		Utilizamos cookies para mejorar tu experiencia en nuestro sitio web. Al continuar, aceptas
		nuestro uso de cookies.
		<a href='/post/poltica-de-cookies/'>Más información</a>.
	</p>
	<div class='cookie-consent-buttons'>
		<button id='accept-cookies' class='cookie-btn'>Aceptar</button>
		<button id='reject-cookies' class='cookie-btn cookie-btn-reject'>Rechazar</button>
	</div>
</div>

<!-- 2. ESTILOS CSS (Astro los aísla automáticamente a este componente) -->
<style>
	.cookie-consent-banner {
		position: fixed;
		bottom: 0;
		left: 0;
		width: 100%;
		background-color: #2c3e50;
		color: #ecf0f1;
		padding: 20px;
		box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.2);
		display: flex;
		justify-content: space-between;
		align-items: center;
		z-index: 1000;
		transition: transform 0.4s ease-out;
		transform: translateY(100%); /* Inicia oculto */
	}

	.cookie-consent-banner.show {
		transform: translateY(0); /* Se muestra deslizándose */
	}

	.cookie-consent-banner p {
		margin: 0;
		font-size: 14px;
		flex-grow: 1;
	}

	.cookie-consent-banner a {
		color: #3498db;
		text-decoration: underline;
	}

	.cookie-consent-buttons {
		display: flex;
		gap: 10px;
		margin-left: 20px;
	}

	.cookie-btn {
		padding: 10px 20px;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		font-weight: bold;
		transition: background-color 0.2s;
	}

	#accept-cookies {
		background-color: #27ae60;
		color: white;
	}
	#accept-cookies:hover {
		background-color: #2ecc71;
	}
	.cookie-btn-reject {
		background-color: #7f8c8d;
		color: white;
	}
	.cookie-btn-reject:hover {
		background-color: #95a5a6;
	}

	@media (max-width: 768px) {
		.cookie-consent-banner {
			flex-direction: column;
			text-align: center;
		}
		.cookie-consent-buttons {
			margin-left: 0;
			margin-top: 15px;
			width: 100%;
			justify-content: center;
		}
	}
</style>

<script>
	// Le decimos a TypeScript que confíe en que gtag existirá globalmente.
	declare global {
		function gtag(...args: any[]): void
	}

	const banner = document.getElementById('cookie-consent-banner')
	const acceptBtn = document.getElementById('accept-cookies')
	const rejectBtn = document.getElementById('reject-cookies')

	if (banner && acceptBtn && rejectBtn) {
		const hideBanner = () => {
			banner.classList.remove('show')
		}

		const consent = localStorage.getItem('cookie_consent')

		// Solo mostramos el banner si NO hay una decisión previa
		if (!consent) {
			setTimeout(() => {
				banner.classList.add('show')
			}, 300)
		}

		// Al ACEPTAR: enviamos el comando 'update' con el estado 'granted'
		acceptBtn.addEventListener('click', () => {
			gtag('consent', 'update', {
				ad_storage: 'granted',
				analytics_storage: 'granted',
				ad_user_data: 'granted',
				ad_personalization: 'granted'
			})

			localStorage.setItem('cookie_consent', 'accepted')
			hideBanner()
			console.log('Consentimiento actualizado a ACEPTADO.')
		})

		// Al RECHAZAR: el estado ya es 'denied' por defecto, solo guardamos la decisión
		rejectBtn.addEventListener('click', () => {
			// Técnicamente no es necesario enviar un 'update' con 'denied',
			// porque ya es el estado por defecto, pero es una buena práctica.
			gtag('consent', 'update', {
				ad_storage: 'denied',
				analytics_storage: 'denied',
				ad_user_data: 'denied',
				ad_personalization: 'denied'
			})

			localStorage.setItem('cookie_consent', 'rejected')
			hideBanner()
			console.log('Consentimiento actualizado a RECHAZADO.')
		})
	}
</script>
